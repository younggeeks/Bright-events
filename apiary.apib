FORMAT: 1A
HOST: https://bright-event.herokuapp.com

# Bright-events

Bright events provides a platform for event organizers to create and manage different types of events while making them easily accessible to target markets


## Group Users

## User Registration [/api/v1/auth/register]

### Register [POST]
Users Can Create an Account with Bright Events and Start Posting Events and They can RSVP to an event
+ Request (application/json)

        {
            "email": "nickii@gmail.com",
            "full_name": "Nickii",
            "password": "something"
        }
+ Response 201 (application/json)

        {
            "message": "Successfully created User",
            "user": {
                "email": "nickii@gmail.com",
                "full_name": "Nickii",
                "id": 13,
                "password": "something"
            }
        }

+ Response 400 (Application/json)
    
        {           
            "message": "An Error Occured , Could Not Create an Account"
        }

## User Login [/api/v1/auth/login]
### Login  [POST]

Registered Users can login to Bright Events and Manage Events or RSVP to events

+ Request (application/json)

        {
           "name": "Dora's wedding",
           "description": "this is going to be epic ",
           "start_date": "1/2/1039",
           "end_date": "2/2/2009",
           "user": "samjunir",
           "address":"kilimani, dar es salaam"
        }

+ Response 201 (application/json)

    + Body
    
            {
                "event":{
                    "address":"Riveroad, Nairobi",
                    "category": "Meetup",
                    "description": "This is going to be epic",
                    "start_date": "1/2/1029",
                    "end_date": "1/2/2019",
                    "user": "samjunior",
                    "id": 90
                },
                "message": "Succesfully Created User",
                "status": 200
    
    
            }




## Group Events

### Events Management [/api/v1/events/]

### Posting New Event [POST]
Posting New Event Which Users can login and RSVP

+ Request (application/json)
    
    + Headers
        
            Authorization: JWT Token
    
    + Body

            {
               "name": "Dora's wedding",
               "description": "this is going to be epic ",
               "start_date": "1/2/1039",
               "end_date": "2/2/2009",
               "user": "samjunir",
               "address":"kilimani, dar es salaam",
               "id":89,
               "category": "Computer"
            }
            
+ Response 201 (application/json)
    
            {
                "event":{
                    "address":"Riveroad, Nairobi",
                    "category": "Meetup",
                    "description": "This is going to be epic",
                    "start_date": "1/2/1029",
                    "end_date": "1/2/2019",
                    "user": "samjunior",
                    "id": 90
                },
                "message": "Succesfully Created User",
                "status": 200
            }

+ Response 400 (application/json)

        {
            "message": "Event Not Found, Fetch Failed",
            "status": 404
        }

### Fetch All Registered Events [GET]
Retrieve All Registered events in the system

+ Request (application/json)
   
    + Headers
        
            Authorization: JWT Token

+ Response 200 (application/json)

        [
                    {
            "address": "Riverroad, Nairobi",
            "category": "Meetup",
            "description": "Come and Meet All These awesome developers and up your game",
            "end_date": "2/3/2018",
            "id": 9494,
            "name": "Angular Conference 2018",
            "start_date": "1/3/2018",
            "user": "samwel"
        },
        {
            "address": "kirinyaga, Kenya",
            "category": "Meetup",
            "description": "Tech ladies , get your geek on , we'll be meeting and cofee will be free",
            "end_date": "9/15/2019",
            "id": 894,
            "name": "Women Developers Pary",
            "start_date": "9/13/2019",
            "user": "samwel"
        },
        {
            "address": "Magomeni, Dar es salaam",
            "category": "Music",
            "description": "Come with your Guitar we are going to rock the night away with rock and roll on acoustic",
            "end_date": "2/3/2018",
            "id": 987,
            "name": "Acoustic Night",
            "start_date": "14/3/2019",
            "user": "juma"
        },
        {
            "address": "Chanika, Dar es salaam",
            "category": "Religion",
            "description": "Come one come all, let us meet and discuss matters that patterns to our youth",
            "end_date": "4/8/2019",
            "id": 5221,
            "name": "Geeks General Meeting",
            "start_date": "2/3/2019",
            "user": "atanasi"
        },
        {
            "address": "Mbezi Beach , Dar es salaams",
            "category": "Wedding",
            "description": "It's Going to Be Epic",
            "end_date": "2/8/2000",
            "id": "01ec2c95-0657-4f95-b41a-ad93a4eef861",
            "name": "Dora's Wedding party",
            "start_date": "1/12/2019",
            "user": "kimbute"
        }
        ]

+ Response 400 (application/json)

        {
            "message": "An Error Occured , Can't Fetch Events"
        }

+ Response 404 (application/json)
        
        {
            "message": "Could Not Fetch Events "
        }

       
### Fetching Single Event  [/events/{event_id}/]
Fetching Details of posted Event By Providing an ID

## Fetching a single Event[GET]

+ Parameters
        
    + event_id (string) - ID of an Event to be fetched

+ Request (application/json)

    + Headers
        
            Authorization: JWT Token

+ Response 200 (application/json)

        {
            "event": {
                "address": "Riverroad, Nairobi",
                "category": "Meetup",
                "description": "Come and Meet All These awesome developers and up your game",
                "end_date": "2/3/2018",
                "id": 9494,
                "name": "Angular Conference 2018",
                "start_date": "1/3/2018",
                "user": "samwel"
            },
            "message": "Event Fetch Successfully",
            "status": 200
        }

+ Response 400 (application/json)

        {
            "message": "Fetching Event Failed",
        }

+ Response 404 (application/json)
        
        {
            "message": "Event Not found ",
            "status": 404
        }

        
## Update a single Event [PUT]
+ Parameters
        
    + event_id (string) - ID of an Event to be fetched

+ Request (application/json)

    + Headers
        
            Authorization: JWT Token

    + Body 
    
            {
            "address": "Magomeni, Dar es salaam",
            "category": "Music",
            "description": "Come with your Guitar we are going to rock the night away with rock and roll on acoustic",
            "end_date": "2/3/2018",
            "id": 987,
            "name": "Acoustic Night",
            "start_date": "14/3/2019",
            "user": "juma"
            }   
            
+ Response 200 (application/json)
        
        {
            "event": {
                "address": "Andela,Tanga",
                "category": "Bootcamp",
                "description": "It's Going to Be Epic",
                "end_date": "2/8/2000",
                "id": "db055ffc-b77e-4935-a9f3-ccfe74cb06b0",
                "name": "Andela Bootcam",
                "start_date": "1/12/2019",
                "user": "Michael"
            },
            "message": "Event Updated Successfully",
            "status": 201
        }

       
## Delete An Event[DELETE]
+ Parameters
        
    + event_id (string) - ID of an Event To Be Deleted

+ Request (application/json)

    + Headers
        
            Authorization: JWT Token

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
            "message": "There was an Error While Deleting an Event"
        }
        
+ Response 404 (application/json)

        {
            "message": "Event ID Not Found, Deletion Failed"
        }
        

        

## RSVP To an Event [POST]
Authenticated Users Can RSVP To an Event

+ parameters
    
    + event_id (string) - ID of an event user wants to RSVP
    
+ Request (Application/json)
    
    + Headers 
    
            Authorization: JWT Token
    
    + Body 
    
            {
            "event_id": 89
            }
            
+ Response 200 (Application/json)

        {
            "message": "You've successfully RSVP'ed to Geeks General Meeting"
        }